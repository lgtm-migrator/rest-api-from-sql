// DISCLAIMER
// This file contains auto generated code.
// Changes to this file may be overwritten when the files are regenerated.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;

namespace AutoGeneratedApi.Controllers
{
    [Route("api/Demo/DemoSalesOrderHeaderSeed")]
    [ApiController]
    public class Demo_DemoSalesOrderHeaderSeedController : ControllerBase
    {
        private readonly ApplicationDbContext _db;

        public Demo_DemoSalesOrderHeaderSeedController(ApplicationDbContext db)
        {
            _db = db;
        }

		[HttpGet]
        [Route("", Name = "List_Demo_DemoSalesOrderHeaderSeed")]
        public async Task<ActionResult<IEnumerable<Demo.DemoSalesOrderHeaderSeed>>> ListDemoSalesOrderHeaderSeed(int pageIndex, int pageSize)
        {
            return await _db.Demo_DemoSalesOrderHeaderSeed.OrderBy(x => x.LocalID).Skip((pageIndex - 1) * pageSize).Take(pageSize).ToListAsync();
        }

		[HttpGet]
        [Route("{localID}", Name = "GetById_Demo_DemoSalesOrderHeaderSeed")]
        public async Task<ActionResult<Demo.DemoSalesOrderHeaderSeed>> GetDemoSalesOrderHeaderSeed(int localID)
        {
            var result = await _db.Demo_DemoSalesOrderHeaderSeed.FirstOrDefaultAsync(x => x.LocalID == localID);
            if (result == null)
            {
                return NotFound();
            }
            return result;
        }

		[HttpPost]
        [Route("", Name = "Create_Demo_DemoSalesOrderHeaderSeed")]
        public async Task<IActionResult> CreateDemoSalesOrderHeaderSeed([FromBody] Demo.DemoSalesOrderHeaderSeed value)
        {
            _db.Demo_DemoSalesOrderHeaderSeed.Add(value);
            await _db.SaveChangesAsync();
            return Ok(value);
        }

		[HttpPut("{localID}", Name = "Edit_Demo_DemoSalesOrderHeaderSeed")]
        public async Task<IActionResult> EditDemoSalesOrderHeaderSeed(int localID, [FromBody] Demo.DemoSalesOrderHeaderSeed value)
        {
            var existing = await _db.Demo_DemoSalesOrderHeaderSeed.FirstOrDefaultAsync(x => x.LocalID == localID);
            if (existing == null)
            {
                return NotFound();
            }

			existing.DueDate = value.DueDate;
			existing.CustomerID = value.CustomerID;
			existing.SalesPersonID = value.SalesPersonID;
			existing.BillToAddressID = value.BillToAddressID;
			existing.ShipToAddressID = value.ShipToAddressID;
			existing.ShipMethodID = value.ShipMethodID;
			existing.LocalID = value.LocalID;

            _db.Demo_DemoSalesOrderHeaderSeed.Update(existing);
            await _db.SaveChangesAsync();
            return NoContent();
        }

		[HttpDelete("", Name = "Delete_Demo_DemoSalesOrderHeaderSeed")]
        public async Task<IActionResult> DeleteDemoSalesOrderHeaderSeed(int localID)
        {
            var existing = await _db.Demo_DemoSalesOrderHeaderSeed.FirstOrDefaultAsync(x => x.LocalID == localID);
            if (existing == null)
            {
                return NotFound();
            }
            _db.Demo_DemoSalesOrderHeaderSeed.Remove(existing);
            await _db.SaveChangesAsync();
            return NoContent();
        }

		// No GetByUniqueKeyActions generated

		// No EditByUniqueKeyActions generated

		// No DeleteByUniqueKeyActions generated

	}
}