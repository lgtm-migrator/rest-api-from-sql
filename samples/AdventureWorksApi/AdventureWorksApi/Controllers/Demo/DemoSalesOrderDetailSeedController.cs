// DISCLAIMER
// This file contains auto generated code.
// Changes to this file may be overwritten when the files are regenerated.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;

namespace AutoGeneratedApi.Controllers
{
    [Route("api/Demo/DemoSalesOrderDetailSeed")]
    [ApiController]
    public class Demo_DemoSalesOrderDetailSeedController : ControllerBase
    {
        private readonly ApplicationDbContext _db;

        public Demo_DemoSalesOrderDetailSeedController(ApplicationDbContext db)
        {
            _db = db;
        }

		[HttpGet]
        [Route("", Name = "List_Demo_DemoSalesOrderDetailSeed")]
        public async Task<ActionResult<IEnumerable<Demo.DemoSalesOrderDetailSeed>>> ListDemoSalesOrderDetailSeed(int pageIndex, int pageSize)
        {
            return await _db.Demo_DemoSalesOrderDetailSeed.OrderBy(x => x.LocalID).Skip((pageIndex - 1) * pageSize).Take(pageSize).ToListAsync();
        }

		[HttpGet]
        [Route("{localID}", Name = "GetById_Demo_DemoSalesOrderDetailSeed")]
        public async Task<ActionResult<Demo.DemoSalesOrderDetailSeed>> GetDemoSalesOrderDetailSeed(int localID)
        {
            var result = await _db.Demo_DemoSalesOrderDetailSeed.FirstOrDefaultAsync(x => x.LocalID == localID);
            if (result == null)
            {
                return NotFound();
            }
            return result;
        }

		[HttpPost]
        [Route("", Name = "Create_Demo_DemoSalesOrderDetailSeed")]
        public async Task<IActionResult> CreateDemoSalesOrderDetailSeed([FromBody] Demo.DemoSalesOrderDetailSeed value)
        {
            _db.Demo_DemoSalesOrderDetailSeed.Add(value);
            await _db.SaveChangesAsync();
            return Ok(value);
        }

		[HttpPut("{localID}", Name = "Edit_Demo_DemoSalesOrderDetailSeed")]
        public async Task<IActionResult> EditDemoSalesOrderDetailSeed(int localID, [FromBody] Demo.DemoSalesOrderDetailSeed value)
        {
            var existing = await _db.Demo_DemoSalesOrderDetailSeed.FirstOrDefaultAsync(x => x.LocalID == localID);
            if (existing == null)
            {
                return NotFound();
            }

			existing.OrderQty = value.OrderQty;
			existing.ProductID = value.ProductID;
			existing.SpecialOfferID = value.SpecialOfferID;
			existing.OrderID = value.OrderID;
			existing.LocalID = value.LocalID;

            _db.Demo_DemoSalesOrderDetailSeed.Update(existing);
            await _db.SaveChangesAsync();
            return NoContent();
        }

		[HttpDelete("", Name = "Delete_Demo_DemoSalesOrderDetailSeed")]
        public async Task<IActionResult> DeleteDemoSalesOrderDetailSeed(int localID)
        {
            var existing = await _db.Demo_DemoSalesOrderDetailSeed.FirstOrDefaultAsync(x => x.LocalID == localID);
            if (existing == null)
            {
                return NotFound();
            }
            _db.Demo_DemoSalesOrderDetailSeed.Remove(existing);
            await _db.SaveChangesAsync();
            return NoContent();
        }

		// No GetByUniqueKeyActions generated

		// No EditByUniqueKeyActions generated

		// No DeleteByUniqueKeyActions generated

	}
}